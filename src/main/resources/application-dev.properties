logging.threshold.console=warn
spring.datasource.url=jdbc:postgresql://localhost:5432/demo_backend
spring.datasource.username=postgres
spring.datasource.password=Purple3664
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JPA configurations
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#KAFKA
# Dirección del broker de Kafka
spring.kafka.bootstrap-servers=localhost:9092

# SERIALIZADORES para PRODUCER (cuando envías mensajes)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# SERIALIZADORES para CONSUMER (cuando recibes mensajes)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Grupo de consumidores (para balanceo de carga y persistencia de offset)
spring.kafka.consumer.group-id=mi-grupo-consumidor

# Auto commit de offset
spring.kafka.consumer.enable-auto-commit=true

# Reinicio desde el principio si no hay offset guardado
spring.kafka.consumer.auto-offset-reset=earliest