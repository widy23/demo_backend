spring.application.name=backend_advance
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.url=jdbc:postgresql://switchyard.proxy.rlwy.net:59467/railway
spring.datasource.username=postgres
spring.datasource.password=qqbQxiCMxkmPYarrSUTtfLbUuihRoOJn
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
server.port=${PORT:8080}

# Circuit Breaker para un servicio llamado "myService"
resilience4j.circuitbreaker.instances.loginService.register-health-indicator=true
resilience4j.circuitbreaker.instances.loginService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.loginService.sliding-window-size=5
resilience4j.circuitbreaker.instances.loginService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.loginService.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.loginService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.loginService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.loginService.slowCallDurationThreshold=5

resilience4j.circuitbreaker.instances.findUserService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.findUserService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.findUserService.failureRateThreshold=10
resilience4j.circuitbreaker.instances.findUserService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.findUserService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.findUserService.minimum-number-of-calls=5


resilience4j.circuitbreaker.instances.findUserService.record-exceptions=org.springframework.web.client.HttpClientErrorException$Forbidden,java.lang.RuntimeException
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://localhost/8080/.well-known/jwks.json


# (Opcional) Actuator exposure
management.endpoint.health.show-details=always

# Exponer todos los endpoints del actuator
management.endpoints.web.exposure.include=*
# Mostrar detalles en el endpoint /health
# Ruta base opcional para actuator
management.endpoints.web.base-path=/actuator

#KAFKA
# Dirección del broker de Kafka
spring.kafka.bootstrap-servers=localhost:9092

# SERIALIZADORES para PRODUCER (cuando envías mensajes)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# SERIALIZADORES para CONSUMER (cuando recibes mensajes)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Grupo de consumidores (para balanceo de carga y persistencia de offset)
spring.kafka.consumer.group-id=mi-grupo-consumidor

# Auto commit de offset
spring.kafka.consumer.enable-auto-commit=true

# Reinicio desde el principio si no hay offset guardado
spring.kafka.consumer.auto-offset-reset=earliest

spring.profiles.active=dev
